[
  {
    "objectID": "quarto-template.html",
    "href": "quarto-template.html",
    "title": "DANL 200: Introduction to Data AnalyticsProject",
    "section": "",
    "text": "#WOOOOOOOOP\noj &lt;- read_csv('https://bcdanl.github.io/data/dominick_oj.csv')\nnvars &lt;- format(round(ncol(oj), 0), \n                nsmall=0, \n                big.mark=\",\") \nnobs &lt;- format(round(nrow(oj), 0), \n                nsmall=0, \n                big.mark=\",\")\nThe number of variables is 4; the number of observations is 28,947.\nRoses are red\nviolets are blue."
  },
  {
    "objectID": "quarto-template.html#data-summary",
    "href": "quarto-template.html#data-summary",
    "title": "DANL 200: Introduction to Data AnalyticsProject",
    "section": "2.1 Data Summary",
    "text": "2.1 Data Summary\n\nSummary statistics (Use skimr::skim())"
  },
  {
    "objectID": "quarto-template.html#data-visualization",
    "href": "quarto-template.html#data-visualization",
    "title": "DANL 200: Introduction to Data AnalyticsProject",
    "section": "2.2 Data Visualization",
    "text": "2.2 Data Visualization\n\noj %&gt;% \n  ggplot(aes(x = log(sales), \n             y = log(price),\n             color = brand)) +\n  geom_point(alpha = .1) +\n  geom_smooth(method = lm, se = F) +\n  facet_wrap(.~ad) +\n  theme_bw() +\n  theme(legend.position = 'top')"
  },
  {
    "objectID": "quarto-template.html#data-transformation",
    "href": "quarto-template.html#data-transformation",
    "title": "DANL 200: Introduction to Data AnalyticsProject",
    "section": "2.3 Data Transformation",
    "text": "2.3 Data Transformation\n\nob_sum1 &lt;- oj %&gt;% \n  group_by(brand, ad) %&gt;% \n  summarise(sales_tot = sum(sales, na.rm = T),\n            price_mean = round(mean(price, na.rm = T), 2))"
  },
  {
    "objectID": "quarto-template.html#analysis",
    "href": "quarto-template.html#analysis",
    "title": "DANL 200: Introduction to Data AnalyticsProject",
    "section": "2.4 Analysis",
    "text": "2.4 Analysis"
  },
  {
    "objectID": "quarto-template.html#quotes",
    "href": "quarto-template.html#quotes",
    "title": "DANL 200: Introduction to Data AnalyticsProject",
    "section": "2.5 Quotes",
    "text": "2.5 Quotes\n\nQuote with &gt;\n\n\n“The truth is rarely pure and never simple.”\n— Oscar Wilde"
  },
  {
    "objectID": "quarto-template.html#inserting-figures",
    "href": "quarto-template.html#inserting-figures",
    "title": "DANL 200: Introduction to Data AnalyticsProject",
    "section": "2.6 Inserting Figures",
    "text": "2.6 Inserting Figures\nFor a demonstration of a DANL tiger, see Figure 1.\n\n\n\n\n\nFigure 1: DANL Tiger"
  },
  {
    "objectID": "quarto-template.html#inserting-a-html-page",
    "href": "quarto-template.html#inserting-a-html-page",
    "title": "DANL 200: Introduction to Data AnalyticsProject",
    "section": "2.7 Inserting a HTML page",
    "text": "2.7 Inserting a HTML page"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Daniel A. Noone",
    "section": "",
    "text": "Daniel Noone is a Junior at SUNY Geneseo and is majoring in Data Analytics.  He was born and raised in Ontario, New York and loves to spend time outdoors."
  },
  {
    "objectID": "index.html#who-is-daniel-noone",
    "href": "index.html#who-is-daniel-noone",
    "title": "Daniel A. Noone",
    "section": "",
    "text": "Daniel Noone is a Junior at SUNY Geneseo and is majoring in Data Analytics.  He was born and raised in Ontario, New York and loves to spend time outdoors."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Daniel A. Noone",
    "section": "Education",
    "text": "Education\nState University of New York at Geneseo | Geneseo, NY  B.S. in Data Analytics | Aug 2022 - May 2025"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Daniel A. Noone",
    "section": "Experience",
    "text": "Experience\nExperience programming in R, as well as basic level knowledge of Python. Extensive experience with Microsoft Office programs such as Excel, Word, and PowerPoint."
  },
  {
    "objectID": "blog-listing.html",
    "href": "blog-listing.html",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nSpotify Listener Data\n\n\n\n\n\n\n\n\n\nDec 11, 2023\n\n\nDaniel Noone\n\n\n5 min\n\n\n\n\n\n\n  \n\n\n\n\nNYC Restaurant Inspections\n\n\n\n\n\n\n\n\n\nDec 10, 2023\n\n\nDaniel Noone\n\n\n5 min\n\n\n\n\n\n\n  \n\n\n\n\nStarwars\n\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nYour Name\n\n\n3 min\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nYOUR NAME\n\n\n1 min\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\n\n\nOct 27, 2023\n\n\nYOUR NAME\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "data.frames.html",
    "href": "data.frames.html",
    "title": "Possible Data Frames",
    "section": "",
    "text": "Below are some possible data frames for use in analysis projects."
  },
  {
    "objectID": "data.frames.html#sleep-health-data",
    "href": "data.frames.html#sleep-health-data",
    "title": "Possible Data Frames",
    "section": "1 Sleep Health Data",
    "text": "1 Sleep Health Data\nDescribes trends in sleep health/quality\n\nsleephlth &lt;- read.csv(\"~/SUNY Geneseo/Classes/Fall 2023/DANL 200 (Team Pr)/dan-noone.github.io/Sleep_health_and_lifestyle_dataset.csv\")\nnvars &lt;- format(round(ncol(sleephlth), 0), \n                nsmall=0, \n                big.mark=\",\") \nnobs &lt;- format(round(nrow(sleephlth), 0), \n                nsmall=0, \n                big.mark=\",\")\n\nNumber of Variables: 13 Number of Observations: 374\n\n1.1 Description of Variables\n- Person ID: Unique identifier for each individual\n\n- Gender: Gender of the person\n\n- Age: The age of the person in years\n\n- Occupation: Occupation of the person\n\n- Sleep Duration: Length of time person sleeps per day (in hours)\n\n- Quality of Sleep: Subjective rating from 1-10 of quality of sleep\n\n- Physical Activity: Length of time person engages in physical activity per day (minutes per day)\n\n- Stress Level: Subjective rating of stress level experienced by person from 1-10\n\n- BMI Category: BMI category of the person\n  -Underweight\n  -Normal\n  -Overweight\n  \n- Blood Pressure: Blood pressure measurement of the person, systolic over diastolic pressure\n\n- Heart Rate: The resting heart rate of the person in beats per minute\n\n- Daily Steps: The number of steps person takes per day\n\n- Sleep Disorder: The presence or absence of a sleep disorder in the person\n  -None\n  -Insomnia\n  -Sleep Apnea"
  },
  {
    "objectID": "posts/nyc_inspections/starwars_df.html",
    "href": "posts/nyc_inspections/starwars_df.html",
    "title": "Starwars",
    "section": "",
    "text": "Let’s analyze the starwars data:\nstarwars &lt;- read_csv(\"https://bcdanl.github.io/data/starwars.csv\")"
  },
  {
    "objectID": "posts/nyc_inspections/starwars_df.html#variable-description-for-starwars-data.frame",
    "href": "posts/nyc_inspections/starwars_df.html#variable-description-for-starwars-data.frame",
    "title": "Starwars",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nfilms List of films the character appeared in\nname Name of the character\nspecies Name of species\nheight Height (cm)\nmass Weight (kg)\nhair_color, skin_color, eye_color Hair, skin, and eye colors\nbirth_year Year born (BBY = Before Battle of Yavin)\nsex The biological sex of the character, namely male, female, hermaphroditic, or none (as in the case for Droids).\ngender The gender role or gender identity of the character as determined by their personality or the way they were programmed (as in the case for Droids).\nhomeworld Name of homeworld"
  },
  {
    "objectID": "posts/nyc_inspections/starwars_df.html#human-vs.-droid",
    "href": "posts/nyc_inspections/starwars_df.html#human-vs.-droid",
    "title": "Starwars",
    "section": "Human vs. Droid",
    "text": "Human vs. Droid\n\nggplot(data = \n         starwars %&gt;% \n         filter(species %in% c(\"Human\", \"Droid\"))) +\n  geom_boxplot(aes(x = species, y = mass, \n                   fill = species),\n               show.legend = FALSE)"
  },
  {
    "objectID": "posts/starwars/starwars_df.html",
    "href": "posts/starwars/starwars_df.html",
    "title": "Starwars",
    "section": "",
    "text": "Let’s analyze the starwars data:\nstarwars &lt;- read_csv(\"https://bcdanl.github.io/data/starwars.csv\")"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "href": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "title": "Starwars",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nfilms List of films the character appeared in\nname Name of the character\nspecies Name of species\nheight Height (cm)\nmass Weight (kg)\nhair_color, skin_color, eye_color Hair, skin, and eye colors\nbirth_year Year born (BBY = Before Battle of Yavin)\nsex The biological sex of the character, namely male, female, hermaphroditic, or none (as in the case for Droids).\ngender The gender role or gender identity of the character as determined by their personality or the way they were programmed (as in the case for Droids).\nhomeworld Name of homeworld"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#human-vs.-droid",
    "href": "posts/starwars/starwars_df.html#human-vs.-droid",
    "title": "Starwars",
    "section": "Human vs. Droid",
    "text": "Human vs. Droid\n\nggplot(data = \n         starwars %&gt;% \n         filter(species %in% c(\"Human\", \"Droid\"))) +\n  geom_boxplot(aes(x = species, y = mass, \n                   fill = species),\n               show.legend = FALSE)"
  },
  {
    "objectID": "posts/nyc_inspections/NYC_RES_INS.html#description-of-variables-for-nyc_rest_ins-data-frame",
    "href": "posts/nyc_inspections/NYC_RES_INS.html#description-of-variables-for-nyc_rest_ins-data-frame",
    "title": "NYC Restaurant Inspections",
    "section": "Description of Variables for nyc_rest_ins data frame",
    "text": "Description of Variables for nyc_rest_ins data frame\n\nCAMIS: A unique identifier number for each restaurant\nDBA: Stands for “doing business as”, name of the restaurant\nBORO: Indentifies the NYC Borough that the restaurant is located in\n\nManhattan\nBronx\nBrooklyn\nQueens\nStaten Island\n\nSTREET: Street address of the restaurant\nCUISINE DESCRIPTION: Type of cuisine the restaurant sells\nINSPECTION DATE: The date the inspection was performed\nACTION: Indicated the action(s) taken as a result of the inspection\nVIOLATION CODE: Violation associated with the restaurant’s inspection\nVIOLATION DESCRIPTION: Descriprion of the violation associated with a restaurant’s inspection\nCRITICAL FLAG: Indicator of a critical violation as result of inspection\n\nCritical\nNot Critical\nNot Applicaple\n\nSCORE: Numeric Score for the inspection\nGrade: Letter Grade for the Inspection"
  },
  {
    "objectID": "posts/nyc_inspections/NYC_RES_INS.html#summary-statisics-for-nyc_rest_ins",
    "href": "posts/nyc_inspections/NYC_RES_INS.html#summary-statisics-for-nyc_rest_ins",
    "title": "NYC Restaurant Inspections",
    "section": "Summary Statisics for nyc_rest_ins:",
    "text": "Summary Statisics for nyc_rest_ins:\n\nskim(nyc_rest_ins)\n\n\nData summary\n\n\nName\nnyc_rest_ins\n\n\nNumber of rows\n17633\n\n\nNumber of columns\n12\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n10\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nDBA\n0\n1\n1\n75\n0\n13914\n0\n\n\nBORO\n0\n1\n5\n13\n0\n5\n0\n\n\nSTREET\n0\n1\n5\n40\n0\n2038\n0\n\n\nCUISINE.DESCRIPTION\n0\n1\n4\n30\n0\n87\n0\n\n\nINSPECTION.DATE\n0\n1\n10\n10\n0\n751\n0\n\n\nACTION\n0\n1\n33\n47\n0\n2\n0\n\n\nVIOLATION.CODE\n0\n1\n3\n5\n0\n60\n0\n\n\nVIOLATION.DESCRIPTION\n0\n1\n19\n940\n0\n101\n0\n\n\nCRITICAL.FLAG\n0\n1\n8\n12\n0\n2\n0\n\n\nGRADE\n0\n1\n1\n1\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nCAMIS\n0\n1\n47112537.51\n4197913.0\n30191841\n41551354\n50049290\n50094455\n50133690\n▁▁▃▁▇\n\n\nSCORE\n0\n1\n10.44\n5.9\n0\n7\n10\n12\n86\n▇▁▁▁▁"
  },
  {
    "objectID": "posts/nyc_inspections/NYC_RES_INS.html#grade-and-boro",
    "href": "posts/nyc_inspections/NYC_RES_INS.html#grade-and-boro",
    "title": "NYC Restaurant Inspections",
    "section": "GRADE and BORO",
    "text": "GRADE and BORO\nGraphical representation of the proportion of each GRADE value in each of the 5 values in BORO\n\nnyc1 &lt;- nyc_rest_ins %&gt;% \n  group_by(BORO, GRADE) %&gt;% \n  summarise(n = n()) %&gt;% \n  mutate(prop = n/sum(n))\n\nggplot(data = nyc1,\n       mapping = aes(x = GRADE, y = prop))+\n  geom_bar(aes(fill = GRADE), stat = 'identity')+\n  facet_wrap(.~BORO)\n\n\n\n\n\nComments on analyses…\n\nAll five boroughs seem to have around equal proportions of each Grade"
  },
  {
    "objectID": "posts/nyc_inspections/NYC_RES_INS.html#critical-flag-and-boro",
    "href": "posts/nyc_inspections/NYC_RES_INS.html#critical-flag-and-boro",
    "title": "NYC Restaurant Inspections",
    "section": "CRITICAL FLAG and BORO",
    "text": "CRITICAL FLAG and BORO\nGraphical representation of the count of each value of CRITICAL FLAG per each value of BORO\n\nnyc2 &lt;- nyc_rest_ins %&gt;% \n  group_by(BORO, CRITICAL.FLAG) %&gt;% \n  summarise(n = n()) %&gt;% \n  mutate(prop = n/sum(n))\nView(nyc2)\n\nggplot(data = nyc2,\n       mapping = aes(x = CRITICAL.FLAG, y = n))+\n  geom_bar(aes(fill = CRITICAL.FLAG), stat = 'identity')+\n  facet_wrap(.~BORO)\n\n\n\n\n\nComments on analyses…\n\nThe proportion of each value of CRITICAL.FLAG within each of the values of BORO seems to be about equal\nThis faceted bar chart also gives info about the number of restaurants in each value of BORO within this data set. In order of most to least…\n\nManhattan has the most restaurants\nBrooklyn has the second most\nQueens the third most\nBronx second to last\nStaten Island is last"
  },
  {
    "objectID": "posts/nyc_inspections/NYC_RES_INS.html#grade-and-critical-flag",
    "href": "posts/nyc_inspections/NYC_RES_INS.html#grade-and-critical-flag",
    "title": "NYC Restaurant Inspections",
    "section": "GRADE and CRITICAL FLAG",
    "text": "GRADE and CRITICAL FLAG\nGraphical representation of the proportion of each value of GRADE per value of CRITICAL FLAG\n\nnyc3 &lt;- nyc_rest_ins %&gt;% \n  group_by(GRADE, CRITICAL.FLAG, BORO) %&gt;% \n  summarise(n = n()) %&gt;% \n  mutate(prop = n/sum(n))\nView(nyc3)\n\nggplot(data = nyc3)+\n  geom_bar(mapping = aes(x = CRITICAL.FLAG, y = prop, fill = GRADE), stat = 'identity', position = 'dodge')\n\n\n\n\n\nComments on analyses…\n\nThe proportion of each value of GRADE seems to be almost equal per value of CRITICAL FLAG\nThe proportion of grade A seems to be slightly less for restaurants with No Critical Flags\nThe proportions of grades B and C appear to be slightly less for restautants with Critical Flags"
  },
  {
    "objectID": "posts/Spotify_all/Spotify_All.html#description-of-variables-for-spotify-data-frame",
    "href": "posts/Spotify_all/Spotify_All.html#description-of-variables-for-spotify-data-frame",
    "title": "Spotify Listener Data",
    "section": "Description of Variables for `spotify Data Frame:",
    "text": "Description of Variables for `spotify Data Frame:\n\npid: A unique ID for a specific playlist\nplaylist_name: The name of a specific playlist\npos: Position of the track within a playlist (starting from 0)\nartist_name: Name of the artist on the track\ntrack_name: name of the track\nduration_ms: duration of the track (in milliseconds)\nalbum_name: name of the track’s album"
  },
  {
    "objectID": "posts/Spotify_all/Spotify_All.html#summary-stattistics-for-spotify",
    "href": "posts/Spotify_all/Spotify_All.html#summary-stattistics-for-spotify",
    "title": "Spotify Listener Data",
    "section": "Summary Stattistics for spotify:",
    "text": "Summary Stattistics for spotify:\n\nskim(spotify)\n\n\nData summary\n\n\nName\nspotify\n\n\nNumber of rows\n198005\n\n\nNumber of columns\n7\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nplaylist_name\n0\n1\n2\n55\n0\n2184\n0\n\n\nartist_name\n0\n1\n1\n117\n0\n18866\n0\n\n\ntrack_name\n0\n1\n1\n216\n0\n64115\n0\n\n\nalbum_name\n0\n1\n1\n255\n0\n35497\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\npid\n0\n1\n323435.50\n466890.21\n0\n738\n1476\n999210\n999998\n▇▁▁▁▃\n\n\npos\n0\n1\n54.39\n48.35\n0\n17\n40\n79\n248\n▇▃▂▁▁\n\n\nduration_ms\n0\n1\n234740.84\n132918.60\n0\n198000\n224693\n258533\n20744575\n▇▁▁▁▁"
  },
  {
    "objectID": "posts/Spotify_all/Spotify_All.html#summary-statistics-for-spotify",
    "href": "posts/Spotify_all/Spotify_All.html#summary-statistics-for-spotify",
    "title": "Spotify Listener Data",
    "section": "Summary Statistics for spotify:",
    "text": "Summary Statistics for spotify:\n\nskim(spotify)\n\n\nData summary\n\n\nName\nspotify\n\n\nNumber of rows\n198005\n\n\nNumber of columns\n7\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nplaylist_name\n0\n1\n2\n55\n0\n2184\n0\n\n\nartist_name\n0\n1\n1\n117\n0\n18866\n0\n\n\ntrack_name\n0\n1\n1\n216\n0\n64115\n0\n\n\nalbum_name\n0\n1\n1\n255\n0\n35497\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\npid\n0\n1\n323435.50\n466890.21\n0\n738\n1476\n999210\n999998\n▇▁▁▁▃\n\n\npos\n0\n1\n54.39\n48.35\n0\n17\n40\n79\n248\n▇▃▂▁▁\n\n\nduration_ms\n0\n1\n234740.84\n132918.60\n0\n198000\n224693\n258533\n20744575\n▇▁▁▁▁"
  },
  {
    "objectID": "posts/Spotify_all/Spotify_All.html#top-5-artists-in-artist_name",
    "href": "posts/Spotify_all/Spotify_All.html#top-5-artists-in-artist_name",
    "title": "Spotify Listener Data",
    "section": "Top 5 Artists in artist_name",
    "text": "Top 5 Artists in artist_name\n\nspot1 &lt;- spotify %&gt;% \n  group_by(artist_name) %&gt;% \n  summarise(n = n()) %&gt;% \n  arrange(-n) %&gt;% \n  head(5) %&gt;% \n  mutate(prop = n/sum(n),\n         art_fct = reorder(artist_name, prop))\nView(spot1)\n\nggplot(data = spot1)+\n  geom_bar(aes(x = art_fct, y = prop, fill = artist_name), stat = 'identity')+\n  theme(axis.text.x=element_text(angle=45,hjust=1,vjust=0.5))+\n  ggtitle('Frequency of Top 5 Artists')+\n  xlab('Artist Name')+\n  ylab('Proportion')\n\n\n\nlength(unique(spotify$artist_name))\n\n[1] 18866\n\n\n\nComments on analyses…\n\nOut of the 18866 different artist names in the spotify data frame, the top five are…\n\nDrake\nKanye West\nKendrick Lamar\nRihanna\nThe Weeknd\n\n\nThese are also in order of greatest to least frequency out of the top 5*"
  },
  {
    "objectID": "posts/Spotify_all/Spotify_All.html#top-5-songs-in-track_name",
    "href": "posts/Spotify_all/Spotify_All.html#top-5-songs-in-track_name",
    "title": "Spotify Listener Data",
    "section": "Top 5 songs in track_name",
    "text": "Top 5 songs in track_name\n\nspot2 &lt;- spotify %&gt;% \n  group_by(track_name) %&gt;% \n  summarise(n = n()) %&gt;% \n  arrange(-n) %&gt;% \n  head(5) %&gt;% \n  mutate(prop = n/sum(n),\n         track_fct = reorder(track_name, prop))\n\nggplot(data = spot2)+\n  geom_bar(aes(x = track_fct, y = prop), stat = 'identity', fill = 'blue')+\n  theme(axis.text.x=element_text(angle=45,hjust=1,vjust=0.5))+\n  ggtitle('Top 5 Songs')+\n  xlab('Song Name')+\n  ylab('Proportion')\n\n\n\nlength(unique(spotify$track_name))\n\n[1] 64115\n\n\n\nComments on analyses…\n\nThere are a total of 64115 unique values in track_name\nOut of those 64115 values, the top 5 are…\n\nCloser\nOne Dance\nHUMBLE\nHome\nRoses\n\n\nIn order of decreasing proportion within the top 5 songs*"
  },
  {
    "objectID": "posts/Spotify_all/Spotify_All.html#most-popular-song-in-track_name-for-each-of-the-top-5-artists-in-artist_name",
    "href": "posts/Spotify_all/Spotify_All.html#most-popular-song-in-track_name-for-each-of-the-top-5-artists-in-artist_name",
    "title": "Spotify Listener Data",
    "section": "Most Popular Song in track_name for Each of the Top 5 Artists in artist_name",
    "text": "Most Popular Song in track_name for Each of the Top 5 Artists in artist_name\n\nspot3 &lt;- spotify %&gt;% \n  filter(artist_name %in% spot1$art_fct) %&gt;% \n  group_by(artist_name, track_name) %&gt;% \n  summarise(n = n())\nspot3.5 &lt;- spot3 %&gt;% \n  group_by(artist_name) %&gt;% \n  slice_max(order_by = n, n = 1) %&gt;%  #Selects the top n value for each value of artist, the top n rows of top n values\n  ungroup() %&gt;% \n  arrange(-n)\n  \nggplot(data = spot3.5) + \n  geom_bar(aes(x = artist_name, y = n, fill = track_name), stat = 'identity')+\n  labs(title = 'Most Popular Song For Each Top 5 Artist',\n       x = 'Artist',\n       y = 'Count')+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\nComments on analyses…\n\nAbove is the top songtrack_name value and it’s count in the spotify data frame for each of the top 5 values of artist_name\n\nDrake : One Dance\nKanye West : GOLD DIGGER\nKendrick Lamar : HUMBLE\nRihanna : Needed Me\nThe Weeknd : Starboy"
  }
]